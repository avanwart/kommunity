@using System.Globalization
@using DasKlub.Lib.Operational
@using DasKlub.Lib.Resources
@using DasKlub.Lib.Values
@model DasKlub.Lib.AppSpec.DasKlub.BOL.UserContent.FAQ
@Html.HiddenFor(model => model.FaqID)
<div>
    <fieldset>
      
        <div class="editor-label">
            @Html.LabelFor(m => m.Question)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.Question, new {@style = "width:500px"})
            @((object) Html.CSSClassValidationMessageFor(m => m.Question))
        </div>


        <div class="editor-label">
            @Html.LabelFor(m => m.QuestionKey)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.QuestionKey, new {@style = "width:500px"})
            @((object) Html.CSSClassValidationMessageFor(m => m.QuestionKey))
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.StatusType)
        </div>

        @{
            IEnumerable<SelectListItem> listItems = Enum.GetValues(typeof (SiteEnums.CommentStatus)).OfType<Enum>().Select(e =>
                new SelectListItem
                {
                    Text = Utilities.ResourceValue(Utilities.GetEnumDescription(e)),
                    Value = e.ToString(),
                    Selected = e.Equals(Model)
                });
            string prefix = "StatusType";
            int index = 0;

            foreach (SelectListItem li in listItems)
            {
                string fieldName = string.Format(CultureInfo.InvariantCulture,
                    "{0}_{1}", prefix, index++);

                if (Model.StatusType.ToString() == li.Value)
                {
                    li.Selected = true;
                }
                <div style="float: left; padding-right: 25px;">
                    @Html.RadioButton(prefix, li.Value, li.Selected, new {@id = fieldName})
                    @Html.Label(fieldName, li.Text)</div>
            }

            <div class="clear">
            </div>
        }



        <div class="editor-label">
            @Html.LabelFor(m => m.Frequency) <i>@Messages.LargerNumbersRankHigher</i>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.Frequency, new {@style = "width:25px"})
            @((object) Html.CSSClassValidationMessageFor(m => m.Frequency))
        </div>





        <div class="editor-label">
            @Html.LabelFor(m => m.Tags) <i>@Messages.SeperateWithCommas</i>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.Tags, new {@style = "width:500px"})
            @((object) Html.CSSClassValidationMessageFor(m => m.Tags))
        </div>



        <div class="editor-label">
            @Html.LabelFor(m => m.FromEmail) 
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.FromEmail, new {@style = "width:500px"})
            @((object) Html.CSSClassValidationMessageFor(m => m.FromEmail))
        </div>

         

 
  
 
        <script type="text/javascript" src="@Url.Content("~/scripts/nicEdit.js")"> </script>
        <div class="editor-label">
            @Html.LabelFor(m => m.Answer)
        </div>
        <div class="editor-field">
            <script type="text/javascript">
                var area1;

                function toggleArea1() {
                    if (!area1) {
                        area1 = new nicEditor({ fullPanel: true }).panelInstance('Answer',
                        { hasPanel: true });
                    } else {
                        area1.removeInstance('Answer');
                        area1 = null;
                    }
                }

                bkLib.onDomLoaded(function() { toggleArea1(); });
            </script>
            <textarea style="background-color: #FFF;" id="Answer" name="Answer" cols="100">@Model.Answer</textarea>
 
            @((object) Html.CSSClassValidationMessageFor(m => m.Answer))
        </div>
    </fieldset>
</div>