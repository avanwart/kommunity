@using System.Threading
@using DasKlub.Lib.BOL
@using DasKlub.Lib.BOL.UserContent
@using DasKlub.Lib.Operational
@using DasKlub.Lib.Resources

@using DasKlub.Web.Helpers
@model DasKlub.Lib.BOL.UserContent.Content

@{
    ViewBag.Title = Model.Title;
    ViewBag.MetaDescription = Model.MetaDescription;
    ViewBag.SpecLang = Model.Language;
}

<div class="row">
    <div class="span8">
      

        @if (Model.Reply != null && Model.Reply.ContentCommentID > 0)
        {
            <div class="alert alert-success">@Messages.YouCommentWillBeReviewed</div>
        }
                                                 <!-- Place this tag where you want the +1 button to render. -->

        <h3 class="title main_title">@Model.Title</h3>
           
         
        <div class="row" >
            <div class="span8">

               
                <div itemscope itemtype="http://data-vocabulary.org/Review">
                    
                  
                    <b>@Messages.Published:</b>
                   
                    <time itemprop="dtreviewed" datetime="@Model.ReleaseDate.ToString("yyyy-MM-dd")">
                        <span title="@Model.ReleaseDate.ToString("o")">@Model.ReleaseDate.ToString("MMMM") @Model.ReleaseDate.Day, @Model.ReleaseDate.Year</span></time>
                      @Html.Raw(" | ")
                 
                       <b>
                @Messages.Language:</b>
                <span class="badge  badge-inverse" title="@Utilities.GetLanguageNameForCode(Model.Language)">@Model.Language.ToUpper()</span> 
             
                


                    @if (Model.CreatedByUserID > 0)
                    {
                        var ua =
                            new UserAccount(Model.CreatedByUserID);

                        var uad =
                            new UserAccountDetail();
                        uad.GetUserAccountDeailForUser(ua.UserAccountID);

               @Html.Raw(" | ")

                        <b>@Messages.From:</b> <a href="@ua.UrlTo.ToString()"><span itemprop="reviewer">@ua.UserName</span></a>
                         <a href="@ua.UrlTo.ToString()">@Html.Raw(ua.TinyUserIcon)</a> 
 
                        string coName = string.Format(@"<div  class=""sprites  sprite-{0}_small""></div> ", uad.Country);

                        @Html.Raw(coName)
                    }
                    
                    
    
                    
                </div>
                
            </div>
             
              
        </div>
        <hr />

        <div style="text-align: center">
            @if (!string.IsNullOrEmpty(Model.ContentVideoURL))
            {
                <div class="video_player" id="video_player">
                    <video 
             
                        id="product_video" width="@ViewBag.VideoWidth" height="@ViewBag.VideoHeight"  
                        poster="@Html.S3ContentPath(Model.ContentPhotoURL)" controls="controls" preload="none"
                   
                        >
                        <!-- MP4 source must come first for iOS -->
                        <source type="video/mp4" src="@Html.S3ContentPath(Model.ContentVideoURL)" />
                        <!-- WebM for Firefox 4 and Opera -->
                        @if (!string.IsNullOrWhiteSpace(Model.ContentVideoURL2))
                        {
                            <source type="video/webm" src="@Html.S3ContentPath(Model.ContentVideoURL2)" />
                        }
                        @*		<!-- OGG for Firefox 3 -->
	<source type="video/ogg" src="/content/media/echo-hereweare.ogv" />

	<!-- Fallback flash player for no-HTML5 browsers with JavaScript turned off -->*@


            
                        <object  width="@ViewBag.VideoWidth"   height="@ViewBag.VideoHeight"  type="application/x-shockwave-flash"
                                 data="@Url.Content("~/content/mediaelement/flashmediaelement.swf")">
                            <param name="movie" value="@Url.Content("~/content/mediaelement/flashmediaelement.swf")" />
                            <param name="flashvars" value="controls=true&amp;file=@Html.S3ContentPath(Model.ContentVideoURL)" />
                            <!-- Image as a last resort -->
                            <img src="@Html.S3ContentPath(Model.ContentPhotoURL)"  
                                 width="@ViewBag.VideoWidth"   height="@ViewBag.VideoHeight"  
                                
                                 alt="@Messages.Video" 
                                 title="@Messages.NoVideoPlaybackCapabilities"  />
                        </object>  
                     
                    
                   
                    </video>
                </div>
            }
            else
            {
                <meta property="og:image" content="@Html.S3ContentPath(Model.ContentPhotoURL)" />
                <img   style="background-color: #FFF; padding: 5px;" src="@Html.S3ContentPath(Model.ContentPhotoURL)" alt="@Model.Title" />
            }
        </div>
        <div class=" clearfix">
            <hr />

            <div class="superquote" style="text-align: center">
                @Model.MetaDescription
          
            </div>
           
            <hr />


        
            <article>
                <p>@Html.Raw(Model.Detail)</p>
            </article>
            <div class="clear"></div>
            <hr />
            <i>@Messages.Tagged:</i> @Html.Raw(Model.TagLinks)
        </div>
   
        <hr   />
        @{ Html.RenderPartial("_AdBanner728x90"); }
        <hr />
        <div class="g-plusone" data-size="medium" data-annotation="inline" data-width="300"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
    (function () {
        var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
        po.src = 'https://apis.google.com/js/plusone.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
    })();
</script>           
              <hr />
        <div id="respond">
            <h4>@Messages.LeaveAComment</h4>
            @Html.ValidationSummary(false)
            @using (Html.BeginForm("Detail", "News", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.ContentID)
                <fieldset>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Reply.Detail)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.Reply.Detail, new {@class = "input-xlarge input-xlarge expand100-200", @rows = "3"})
                        @Html.CSSClassValidationMessageFor(m => m.Reply.Detail)
                    </div>
                    @if (Request.IsAuthenticated)
                    {
                        <button class="btn btn-success" type="submit">@Messages.Submit</button>
                    }
                    else
                    {
                        <button disabled="disabled" class="btn btn-success" type="submit">@Messages.Submit</button>
                        <a href="@Url.Content("~/account/logon")">@Messages.SignIn</a>
                    }
                </fieldset>
            }
        </div>
        @if (Model.Comments != null && Model.Comments.Count > 0)
        {
            <a name="content_comments"></a>
            <h4>@Messages.Comments</h4>
            <ul class="comment_list">
                @foreach (ContentComment content in
                    Model.Comments)
                {
                    @Html.Raw(content.ToUnorderdListItem)
                }
            </ul>
        }
    </div>
    <div class="span4">

                  
            @{ Html.RenderPartial("_AdBanner300x250"); }
     
  
        <hr />
        @if (ViewBag.NextNews != null)
        {
            <span>@Messages.Next</span>
            <ul class="photo_navs">
                @Html.Raw(ViewBag.NextNews)
            </ul>
        }
        @if (ViewBag.PreviousNews != null)
        {
            <span>@Messages.Previous</span>
            <ul class="photo_navs">
                @Html.Raw(ViewBag.PreviousNews)
            </ul>
        }
   

        @{ Html.RenderPartial("_AdBanner160x600"); }
        <hr />
                <div id="article_tags" >
            <h3  >@Messages.FilterNewsByTag
            </h3>
            <p class="line_space">
                @Html.Raw(HttpUtility.HtmlDecode(ViewBag.CloudTags))
            </p>
        </div>
        <hr />
       
    </div>
</div>
@section _javascript {
    <script type="text/javascript">

      
        var DK = DK || {};

        (function() {

            'use strict';
 
            function VideoLog(options) {
                this.options = {
                    serviceUrl: $rootUrl + 'News/VideoLog'
                };

                if (typeof options !== 'undefined') {
                    jQuery.extend(this.options, options);
                }
            }

            VideoLog.prototype.logView = function(contentID, success, complete, error) {

                error = error || function() {
                };
                success = success || function() {
                };
                complete = complete || function() {
                };

                jQuery.ajax({
                    type: 'POST',
                    url: this.options.serviceUrl,
                    data: {
                        contentID: contentID
                    },
                    error: error,
                    success: success,
                    complete: complete
                });
            };

            // expose public api
            DK.VideoLog = VideoLog;
        }());


        (function() {

            var loggedView = false,
                videoLog = new DK.VideoLog('@Url.Action("News", "VideoLog")'),
                player = $('video').mediaelementplayer({
                    success: function(player) {
                        player.addEventListener('play', function() {
                            if (!loggedView) {
                                videoLog.logView(@Model.ContentID);
                                loggedView = true;
                            }
                        });
                    },

                    // if the <video width> is not specified, this is the default
                    //  defaultVideoWidth: ViewBag.VideoWidth,
                    // if the <video height> is not specified, this is the default
                    //defaultVideoHeight: ViewBag.VideoHeight,
                    // if set, overrides <video width>
                    //videoWidth: -1,
                    // if set, overrides <video height>
                    //videoHeight: -1,
                    // width of audio player
                    //audioWidth: 400,
                    // height of audio player
                    //audioHeight: 30,
                    // initial volume when the player starts
                    startVolume: 0.8,
                    // useful for <audio> player loops
                    loop: false,
                    // enables Flash and Silverlight to resize to content size
                    //enableAutosize: true,
                    // the order of controls you want on the control bar (and other plugins below)
                    features: ['playpause', 'progress', 'duration', 'fullscreen', 'volume']//,

                    // automatically selects a <track> element
                    //startLanguage: '@Thread.CurrentThread.CurrentUICulture.Parent.IetfLanguageTag',
                    // a list of languages to auto-translate via Google
                    //translations:[], 
                
                    // a dropdownlist of automatic translations
                    //translationSelector: false,
                // key for tranlsations
                //googleApiKey: ''
                });
        }());

        $('video').mediaelementplayer().bind('ended', function() { $(this).parents('.mejs-inner').find('.mejs-poster').show(); });

    </script>
}