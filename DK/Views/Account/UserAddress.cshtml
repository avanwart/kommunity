@model DasKlub.Models.UserAddressModel
@using BootBaronLib.Resources;
@using BootBaronLib.Enums;
@using BootBaronLib.Operational;
@using BootBaronLib.Values
@{
    ViewBag.Title = Messages.EditProfile + ": "+ Messages.Address;
}
<div class="row">
    <div class="span6">
        @{Html.RenderPartial("_AdBanner"); }
        <h2>@Messages.Submit: @Messages.Address</h2>
        @if (ViewBag.ProfileUpdated != null && ViewBag.ProfileUpdated)
        {
            <div class="alert alert-success">@Messages.Success</div>
          
        }
        @using (Html.BeginForm("useraddress", "account"))
        {
 
            @Html.ValidationSummary(false, Messages.PleaseCorrectTheErrors)
        
         
            <fieldset>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.FirstName )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.FirstName, new { maxlength = "15" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.LastName )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.LastName, new { maxlength = "15" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.StreetAddress + " 1" )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.AddressLine1 )

                    @Html.ValidationMessageFor(m => m.AddressLine1)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.StreetAddress + " 2" )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.AddressLine2 )
                    <i>(@Messages.Optional)</i>
                    @Html.ValidationMessageFor(m => m.AddressLine2)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.StreetAddress + " 3" )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.AddressLine3)
                    <i>(@Messages.Optional)</i>
                    @Html.ValidationMessageFor(m => m.AddressLine3)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.City )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.City)
                    @Html.ValidationMessageFor(m => m.City)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.RegionState )
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.RegionState)
                    @Html.ValidationMessageFor(m => m.RegionState)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.Country)
                </div>
                <div class="editor-field">
                    <select name="country">
                        @if (string.IsNullOrEmpty(Model.Country) || Model.Country == SiteEnums.CountryCodeISO.U0.ToString())
                        {
                            <option value="">@Messages.DashSelect</option>
                        }
                        @foreach (string country in ViewBag.CountryOptions)
                        {
                            SiteEnums.CountryCodeISO countryCode =
                            (SiteEnums.CountryCodeISO)Enum.Parse(
                           typeof(SiteEnums.CountryCodeISO), country);

                            if (countryCode != SiteEnums.CountryCodeISO.U0 &&
                                 countryCode != SiteEnums.CountryCodeISO.RD)
                            {
                                if (countryCode.ToString() != Model.Country)
                                {
                            <option value="@countryCode.ToString()">@Utilities.ResourceValue(Utilities.GetEnumDescription(countryCode))</option>
                                }
                                else
                                {
                            <option selected="selected" value="@countryCode.ToString()">@Utilities.ResourceValue(Utilities.GetEnumDescription(countryCode))</option>
                                }
                            }
                        }
                    </select>
                       @Html.ValidationMessageFor(m => m.Country)
                </div>
                <div class="editor-label">
                    @Html.Label(BootBaronLib.Resources.Messages.PostalCode)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.PostalCode)
                    @Html.ValidationMessageFor(m => m.PostalCode)
                </div>
            </fieldset>
            <input class="btn btn-success" type="submit" value="@BootBaronLib.Resources.Messages.Submit" />
              
        }
    </div>
    <div class="span6">
        @{Html.RenderPartial("_AdBanner2"); }
        <img  src="@Url.Content("~/Content/images/stills/giveaway.jpg")" />
    </div>
</div>
<style type="text/css">
    .editor-field, .editor-field input
    {
        padding-bottom: 0;
    }
</style>
